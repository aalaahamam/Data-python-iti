// FINAL Jenkinsfile: Switching to Scripted Pipeline for full control on Windows

node {
    // Define the workspace on the node
    stage('Checkout') {
        // Clean workspace before checkout
        cleanWs()
        // Checkout the source code from Git
        checkout scm
    }

    // Define the Docker image we want to use
    def customImage = docker.image('python:3.9-slim')

    // Run the main logic inside the container
    customImage.inside {
        stage('Install Dependencies') {
            echo "--- 1. Setting up Python virtual environment ---"
            bat "python -m venv venv"
            
            echo "--- 2. Installing dependencies ---"
            bat "venv\\Scripts\\pip install --no-cache-dir -r requirements.txt"
        }

        stage('Train and Evaluate') {
            echo "--- 3. Running data loading and preprocessing ---"
            bat "venv\\Scripts\\python data_loading.py"
            
            echo "--- 4. Starting model training ---"
            bat "venv\\Scripts\\python model_training.py"

            echo "--- 5. Evaluating the trained model ---"
            bat "venv\\Scripts\\python model_evaluation.py"
        }
    }

    // This stage runs back on the Jenkins node (outside the container)
    stage('Archive Artifacts') {
        echo "--- Archiving the trained model file ---"
        archiveArtifacts artifacts: 'model.pkl', fingerprint: true
    }
}
